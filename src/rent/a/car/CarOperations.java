/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rent.a.car;

import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import static rent.a.car.CustomerOperations.CusList;

/**
 *
 * @author hp
 */
public class CarOperations extends javax.swing.JFrame {

    /**
     * Creates new form CarOperations
     */
    int selectedRow;
    public static List<Car> CarList = new ArrayList<>();

    public CarOperations() {
        initComponents();

        ListSelectionModel model = CarTable.getSelectionModel();
        model.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!model.isSelectionEmpty()) {
                    selectedRow = model.getMinSelectionIndex();
                }
            }
        });

        DefaultTableModel model2 = (DefaultTableModel) CarTable.getModel();
        model2.getDataVector().removeAllElements();
        model2.fireTableDataChanged();
        for (int i = 0; i < CarList.size(); i++) {
            int id = i + 1;
            model2.addRow(new Object[]{id, CarList.get(i).getBrand(), CarList.get(i).getMake(), CarList.get(i).getPricePerDay()});
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        BrandField = new javax.swing.JTextField();
        MakeField = new javax.swing.JTextField();
        PriceField = new javax.swing.JTextField();
        AddCar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        CarTable = new javax.swing.JTable();
        Sear = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setText("Brand:");

        jLabel6.setText("Make:");

        jLabel7.setText("Price Per Day:");

        BrandField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrandFieldActionPerformed(evt);
            }
        });

        AddCar.setText("Add Car");
        AddCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCarActionPerformed(evt);
            }
        });

        CarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Brand", "Make", "Price Per Day"
            }
        ));
        jScrollPane2.setViewportView(CarTable);

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(479, 479, 479)
                        .addComponent(Sear, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Search)
                        .addGap(152, 152, 152))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BrandField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MakeField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(AddCar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Delete)
                .addGap(52, 52, 52)
                .addComponent(Save)
                .addGap(47, 47, 47)
                .addComponent(Refresh)
                .addGap(113, 113, 113))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(BrandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(MakeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(AddCar)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete)
                    .addComponent(Save)
                    .addComponent(Refresh))
                .addGap(88, 88, 88))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BrandFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrandFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrandFieldActionPerformed

    private void AddCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCarActionPerformed
        // TODO add your handling code here:

        String price = this.PriceField.getText().toString();
        boolean flag = true;
        String regex = "[0-9]+";
        Pattern p = Pattern.compile(regex);
        Matcher m = p.matcher(price);

        if (this.BrandField.getText().toString().isEmpty() && this.MakeField.getText().toString().isEmpty() && this.PriceField.getText().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter All Fields");
        } else {
            if (m.matches() == false) {
                JOptionPane.showMessageDialog(null, "Price should be a number");
                flag = false;
            }

            if (flag == true) {
                int size = CarList.size();
                size++;
                Car C = new Car(size, BrandField.getText().toString(), MakeField.getText().toString(), Double.valueOf(PriceField.getText().toString()));
                CarList.add(C);
                DefaultTableModel model = (DefaultTableModel) CarTable.getModel();
                model.addRow(new Object[]{String.valueOf(size), C.getBrand(), C.getMake(), C.getPricePerDay()});
            }
        }

    }//GEN-LAST:event_AddCarActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
         String searcher = this.Sear.getText().toString();
        DefaultTableModel model = (DefaultTableModel) CarTable.getModel();
        int id2 = 0;
        String fn2 = null, ln2 = null, e2 = null, p2 = null;

        for (int i = 0; i < CarTable.getRowCount(); i++) {
            int id = Integer.valueOf(CarTable.getValueAt(i, 0).toString());
            String br = (String) CarTable.getValueAt(i, 1).toString();
            String mk = (String) CarTable.getValueAt(i, 2).toString();
            String pp = (String) CarTable.getValueAt(i, 3).toString();
            if (br.equals(searcher)==true || mk.equals(searcher)==true || pp.equals(searcher)==true)
            {
                id2 = id;
                fn2 = br;
                ln2 = mk;
                e2 = pp;
             }
        }
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        model.addRow(new Object[]{id2, fn2, ln2, e2});
    
    }//GEN-LAST:event_SearchActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        CarList.remove(selectedRow);

        DefaultTableModel model = (DefaultTableModel) CarTable.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        for (int i = 0; i < CarList.size(); i++) {
            int id = i + 1;
            model.addRow(new Object[]{id, CarList.get(i).getBrand(), CarList.get(i).getMake(), CarList.get(i).getPricePerDay()});
        }

    }//GEN-LAST:event_DeleteActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) CarTable.getModel();
        CarList.clear();
        for (int i = 0; i < CarTable.getRowCount(); i++) {
            int id = Integer.valueOf(CarTable.getValueAt(i, 0).toString());
            String br = (String) CarTable.getValueAt(i, 1).toString();
            String mk = (String) CarTable.getValueAt(i, 2).toString();
            String pp = (String) CarTable.getValueAt(i, 3).toString();

            Car C = new Car(id, br, mk, Double.valueOf(pp));
            CarList.add(C);
        }
        Menu M = new Menu();
        M.setVisible(true);
        this.setVisible(false);

         try {
            FileWriter csvWriter = new FileWriter("Car.csv");
            for(int i=0 ; i<CarList.size() ; i++)
            {
            csvWriter.append(CarList.get(i).getId()+"");
            csvWriter.append(",");    
            
            csvWriter.append(CarList.get(i).getBrand());
            csvWriter.append(",");    
            
            csvWriter.append(CarList.get(i).getMake());
            csvWriter.append(",");    
            
            csvWriter.append(CarList.get(i).getPricePerDay()+"");
            csvWriter.append("\n");    
                 
            }
            
            csvWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(CustomerOperations.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_SaveActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) CarTable.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        for (int i = 0; i < CarList.size(); i++) {
            int id = i + 1;
            model.addRow(new Object[]{id, CarList.get(i).getBrand(), CarList.get(i).getMake(), Double.valueOf(CarList.get(i).getPricePerDay())});
        }
    }//GEN-LAST:event_RefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarOperations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarOperations().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCar;
    private javax.swing.JTextField BrandField;
    private javax.swing.JTable CarTable;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField MakeField;
    private javax.swing.JTextField PriceField;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton Save;
    private javax.swing.JTextField Sear;
    private javax.swing.JButton Search;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
